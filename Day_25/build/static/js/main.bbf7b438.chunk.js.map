{"version":3,"sources":["components/InputData.jsx","actions/index.js","components/WeatherCard.jsx","components/ToggleTheme.jsx","App.jsx","reducers/PlaceReducer.js","reducers/PlaceDataReducer.js","reducers/ThemeReducer.js","reducers/index.js","store.js","index.js"],"names":["Input","place","useSelector","state","theme","dispatch","useDispatch","style","marginTop","width","height","className","type","value","padding","onChange","e","payload","updatePlace","target","Button","variant","margin","backgroundColor","color","outline","onClick","fetch","then","res","json","data","updatePlaceData","WeatherCard","placeData","console","log","current","display","flexDirection","alignItems","Card","borderRadius","Body","Img","src","condition","icon","Title","fontWeight","fontSize","temp_c","Text","text","location","name","wind_kph","humidity","precip_mm","ToggleTheme","App","placeReducer","action","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbf7b438.chunk.js","sourcesContent":["import { updatePlace, updatePlaceData } from \"../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Input = () => {\r\n  const place = useSelector((state) => state.place);\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"2rem\",\r\n        width: \"20rem\",\r\n        height: \"2rem\",\r\n      }}\r\n    >\r\n      <input\r\n        className={theme ? \"dark\" : \"\"}\r\n        type=\"text\"\r\n        value={place}\r\n        style={{ padding: \"0.3rem\" }}\r\n        onChange={(e) => {\r\n          dispatch(updatePlace(e.target.value));\r\n        }}\r\n      />\r\n      <Button\r\n        variant=\"primary\"\r\n        style={{\r\n          margin: \"-0.2rem 0 0 1rem\",\r\n          padding: \"0.4rem\",\r\n          backgroundColor: \"#0B5ED7\",\r\n          color: \"white\",\r\n          outline: \"0\",\r\n        }}\r\n        onClick={() => {\r\n          dispatch(updatePlaceData(place));\r\n        }}\r\n      >\r\n        Find\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","const updatePlace = (place) => {\r\n  return {\r\n    type: \"UPDATE_PLACE\",\r\n    payload: place,\r\n  };\r\n};\r\n\r\nconst updatePlaceData = (place) => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `https://api.weatherapi.com/v1/current.json?key=84f95afa070443639ec173307213107&q=${place}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: \"UPDATE_PLACE_DATA\",\r\n          payload: data,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nconst toggleTheme = () => {\r\n  return {\r\n    type: \"TOGGLE_THEME\",\r\n  };\r\n};\r\n\r\nexport { updatePlace, updatePlaceData, toggleTheme };\r\n","import { Card } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nconst WeatherCard = () => {\r\n  const placeData = useSelector((state) => state.placeData);\r\n  const theme = useSelector((state) => state.theme);\r\n  console.log(placeData);\r\n  return (\r\n    <>\r\n      {!placeData.current ? (\r\n        <div\r\n          style={{ marginTop: \"2rem\", fontWeight: \"500\", fontSize: \"1.5rem\" }}\r\n        >\r\n          Enter a valid place\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Card\r\n            className={theme ? \"shadow p-3 mb-5 dark\" : \"shadow p-3 mb-5\"}\r\n            style={{\r\n              width: \"24rem\",\r\n              marginTop: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n            }}\r\n          >\r\n            <Card.Body>\r\n              <Card.Img\r\n                src={placeData.current.condition.icon}\r\n                style={{ width: \"5rem\", height: \"5rem\" }}\r\n              />\r\n              <Card.Title style={{ fontWeight: \"600\", fontSize: \"2.5rem\" }}>\r\n                {placeData.current.temp_c}Â°C\r\n              </Card.Title>\r\n              <Card.Text>{placeData.current.condition.text}</Card.Text>\r\n              <Card.Text style={{ fontWeight: \"600\" }}>\r\n                {placeData.location.name}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n          <div\r\n            className={\r\n              theme\r\n                ? \"shadow p-3 mb-5 stat-container dark\"\r\n                : \"shadow p-3 mb-5 stat-container\"\r\n            }\r\n          >\r\n            <div>\r\n              <div className=\"stat\">Wind Speed</div>\r\n              <div className=\"stat-value\">{placeData.current.wind_kph}</div>\r\n              kmph\r\n            </div>\r\n            <div>\r\n              <div className=\"stat\">Humidity</div>\r\n              <div className=\"stat-value\">{placeData.current.humidity}</div>%\r\n            </div>\r\n            <div>\r\n              <div className=\"stat\">Precipitation</div>\r\n              <div className=\"stat-value\">{placeData.current.precip_mm}</div>\r\n              mm\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleTheme } from \"../actions\";\r\n\r\nconst ToggleTheme = () => {\r\n  const theme = useSelector((state) => state.theme);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"toggle-theme\">\r\n      <button\r\n        className={theme ? \"btn btn-dark\" : \"btn btn-light\"}\r\n        onClick={() => {\r\n          dispatch(toggleTheme());\r\n        }}\r\n      >\r\n        {theme ? \"Dark\" : \"Light\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleTheme;\r\n","import \"./App.css\";\nimport Input from \"./components/InputData\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport ToggleTheme from \"./components/ToggleTheme\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const theme = useSelector((state) => state.theme);\n  return (\n    <div className={theme ? \"App dark\" : \"App\"}>\n      <header className=\"App-header\">Weather App</header>\n      <Input />\n      <WeatherCard />\n      <ToggleTheme />\n    </div>\n  );\n}\n\nexport default App;\n","const placeReducer = (state = \"\", action) => {\r\n  if (action.type === \"UPDATE_PLACE\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default placeReducer;\r\n","const placeDataReducer = (state = {}, action) => {\r\n  if (action.type === \"UPDATE_PLACE_DATA\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default placeDataReducer;\r\n","const themeReducer = (state = false, action) => {\r\n  if (action.type === \"TOGGLE_THEME\") {\r\n    return !state;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default themeReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport placeReducer from \"./PlaceReducer\";\r\nimport placeDataReducer from \"./PlaceDataReducer\";\r\nimport themeReducer from \"./ThemeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  place: placeReducer,\r\n  placeData: placeDataReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}