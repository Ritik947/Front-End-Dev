{"version":3,"sources":["components/FetchResults.jsx","components/Search.jsx","components/Results.jsx","App.jsx","index.js"],"names":["useFetch","searchVal","setStatus","url","setSearchData","useState","dataUrl","setDataUrl","useEffect","trim","a","fetch","method","headers","response","json","data","console","log","fetchData","Search","setSearchVal","param","encodeURIComponent","className","type","placeholder","onChange","e","target","value","src","alt","onClick","Results","status","searchData","style","color","relatedSearch","map","el","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA6BeA,EA3BE,SAACC,EAAWC,EAAWC,EAAKC,GAC3C,MAA8BC,mBAASF,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAuBA,OArBAC,qBAAU,WACHP,GAAcA,EAAUQ,QAGd,uCAAG,8BAAAC,EAAA,6DAChBR,EAAU,YADM,SAEOS,MAAML,EAAS,CACpCM,OAAQ,MACRC,QAAS,CACP,iBACE,qDACF,kBAAmB,qDAPP,cAEVC,EAFU,gBAUGA,EAASC,OAVZ,OAUVC,EAVU,OAWhBC,QAAQC,IAAIF,GACZZ,EAAcY,GACdd,EAAU,WAbM,4CAAH,oDAefiB,KACC,CAACb,IACG,CAACC,I,OCGKa,EA1BA,SAAC,GAAkC,IAAhClB,EAA+B,EAA/BA,UAAWE,EAAoB,EAApBA,cAC3B,EAAkCC,mBAAS,IAA3C,mBAAOJ,EAAP,KAAkBoB,EAAlB,KACMC,EAAQC,mBAAmBtB,GAC7BE,EAAG,4FAAwFmB,EAAxF,8CACP,EAAqBtB,EAASC,EAAWC,EAAWC,EAAKC,GAAlDG,EAAP,oBAOA,OACE,sBAAKiB,UAAU,aAAf,UACE,uBACEA,UAAU,eACVC,KAAK,OACLC,YAAY,4CACZC,SAAU,SAACC,GACTP,EAAaO,EAAEC,OAAOC,UAG1B,qBAAKC,IAAI,oBAAoBC,IAAI,GAAGC,QAhBxC,WACMhC,GAAaA,EAAUQ,SACzBF,EAAWJ,GACXc,QAAQC,IAAI,+BCeHgB,EA1BC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACzB,OAAKA,EAOY,aAAXD,EACK,qBAAKE,MAAO,CAAEC,MAAO,SAArB,iCAGL,qBAAKd,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACGY,EAAWG,cAAcC,KAAI,SAACC,EAAIC,GAAL,OAC5B,qBAAKlB,UAAU,iBAAf,SACGiB,GADkCC,UAbhC,aAAXP,EACK,qBAAKE,MAAO,CAAEC,MAAO,SAArB,iCAEA,qBAAKD,MAAO,CAAEC,MAAO,SAArB,mCCgBEK,MAhBf,WACE,MAAoCtC,mBAAS,MAA7C,mBAAO+B,EAAP,KAAmBhC,EAAnB,KACA,EAA4BC,mBAAS,QAArC,mBAAO8B,EAAP,KAAejC,EAAf,KACA,OACE,sBAAKsB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKO,IAAI,kBAAkBC,IAAI,OAEjC,iCACE,cAAC,EAAD,CAAQ9B,UAAWA,EAAWE,cAAeA,IAC7C,cAAC,EAAD,CAAS+B,OAAQA,EAAQC,WAAYA,WCX7CQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.02d2c030.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (searchVal, setStatus, url, setSearchData) => {\r\n  const [dataUrl, setDataUrl] = useState(url);\r\n\r\n  useEffect(() => {\r\n    if (!searchVal || !searchVal.trim()) {\r\n      return;\r\n    }\r\n    const fetchData = async () => {\r\n      setStatus(\"fetching\");\r\n      const response = await fetch(dataUrl, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"687e7bd97cmsh2d161213064f85bp1ecaabjsn5a362592f237\",\r\n          \"x-rapidapi-host\": \"contextualwebsearch-websearch-v1.p.rapidapi.com\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setSearchData(data);\r\n      setStatus(\"fetched\");\r\n    };\r\n    fetchData();\r\n  }, [dataUrl]);\r\n  return [setDataUrl];\r\n};\r\n\r\nexport default useFetch;\r\n","import useFetch from \"./FetchResults\";\r\nimport { useState } from \"react\";\r\n\r\nconst Search = ({ setStatus, setSearchData }) => {\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const param = encodeURIComponent(searchVal);\r\n  let url = `https://contextualwebsearch-websearch-v1.p.rapidapi.com/api/Search/WebSearchAPI?q=${param}&pageNumber=1&pageSize=10&autoCorrect=true`;\r\n  const [setDataUrl] = useFetch(searchVal, setStatus, url, setSearchData);\r\n  function getDataFromUrl() {\r\n    if (searchVal && searchVal.trim()) {\r\n      setDataUrl(url);\r\n      console.log(\"Search request made\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input\r\n        className=\"search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Search text here (500 Searches/Day LIMIT)\"\r\n        onChange={(e) => {\r\n          setSearchVal(e.target.value);\r\n        }}\r\n      />\r\n      <img src=\"images/search.svg\" alt=\"\" onClick={getDataFromUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","const Results = ({ status, searchData }) => {\r\n  if (!searchData) {\r\n    if (status === \"fetching\") {\r\n      return <div style={{ color: \"white\" }}>Waiting for results</div>;\r\n    } else {\r\n      return <div style={{ color: \"white\" }}>Search for something</div>;\r\n    }\r\n  } else {\r\n    if (status === \"fetching\") {\r\n      return <div style={{ color: \"white\" }}>Waiting for results</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"results-container\">\r\n          <div className=\"related-results\">\r\n            {searchData.relatedSearch.map((el, index) => (\r\n              <div className=\"related-result\" key={index}>\r\n                {el}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Results;\r\n","import \"./App.css\";\nimport Search from \"./components/Search\";\nimport Results from \"./components/Results\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [searchData, setSearchData] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src=\"images/logo.png\" alt=\"\" />\n      </header>\n      <main>\n        <Search setStatus={setStatus} setSearchData={setSearchData} />\n        <Results status={status} searchData={searchData} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}