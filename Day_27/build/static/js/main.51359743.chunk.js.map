{"version":3,"sources":["components/GetTodo.jsx","actions/index.js","components/DisplayTodo.jsx","App.jsx","reducers/TodoReducer.js","reducers/index.js","store.js","index.js"],"names":["GetTodo","useState","todo","setTodo","dispatch","useDispatch","className","onSubmit","e","preventDefault","type","payload","title","isEdit","addTodo","id","placeholder","value","onChange","target","required","src","alt","width","height","DisplayTodo","todos","useSelector","state","length","map","index","disabled","onClick","console","log","flag","App","todoReducer","action","filter","_item","el","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAiCeA,MA7Bf,WAAoB,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,KAEXC,EAAWC,cACjB,OACE,uBACEC,UAAU,gBACVC,SAAU,SAACC,GACTA,EAAEC,iBACFL,ECZQ,SAACF,GACf,MAAO,CACLQ,KAAM,WACNC,QAAS,CAAEC,MAAOV,EAAMW,QAAQ,IDSnBC,CAAQZ,IACjBC,EAAQ,KALZ,UAQE,uBACEO,KAAK,OACLK,GAAG,eACHC,YAAY,gBACZC,MAAOf,EACPgB,SAAU,SAACV,GACTL,EAAQK,EAAEW,OAAOF,QAEnBG,UAAQ,IAEV,wBAAQL,GAAG,aAAaL,KAAK,SAA7B,SACE,qBAAKW,IAAI,mBAAmBC,IAAI,GAAGC,MAAM,OAAOC,OAAO,eEmBhDC,MA3Cf,WACE,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAM1B,QACrCE,EAAWC,cACjB,OACE,qBAAKC,UAAU,sBAAf,SACIoB,EAAMG,OAGNH,EAAMI,KAAI,SAAC5B,EAAM6B,GAAP,OACR,sBAAKzB,UAAU,eAAf,UACE,uBACEI,KAAK,OACLU,UAAQ,EACRH,MAAOf,EAAKU,MACZM,SAAU,SAACV,GAAD,OAAOJ,GDHXW,ECG+BgB,EDH3BnB,ECGkCJ,EAAEW,OAAOF,MDF1D,CACLP,KAAM,cACNC,QAAS,CAAEI,GAAIA,EAAIH,MAAOA,MAHX,IAACG,EAAIH,GCIVoB,SAAU9B,EAAKW,OAAS,GAAK,aAE/B,sBAAKP,UAAU,aAAf,UACE,wBACES,GAAG,gBACHE,MAAQf,EAAKW,OAAkB,OAAT,OACtBoB,QAAS,SAACzB,GACR0B,QAAQC,IAAI3B,EAAEW,OAAOF,OACrB,IAAImB,EAA0B,SAAnB5B,EAAEW,OAAOF,MACpBb,EDLT,CACLM,KAAM,YACNC,QAAS,CAAEI,GCGqBgB,EDHblB,OCGoBuB,MAN7B,SASIlC,EAAKW,OAAkB,OAAT,SAElB,wBACEE,GAAG,kBACHkB,QAAS,kBAAM7B,ED1BtB,CACLM,KAAM,cACNC,QCwB+CoB,KAFrC,yBApB+BA,MAHrC,qBAAKzB,UAAU,WAAf,gDCOO+B,MAZf,WACE,OACE,sBAAK/B,UAAU,gBAAf,UACE,+CACA,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,W,eCWOgC,EArBK,WAAyB,IAAxBV,EAAuB,uDAAf,GAAIW,EAAW,uCAC1C,MAAoB,aAAhBA,EAAO7B,KACH,GAAN,mBAAWkB,GAAX,CAAkBW,EAAO5B,UACA,gBAAhB4B,EAAO7B,KACTkB,EAAMY,QAAO,SAACC,EAAOV,GAAR,OAAkBA,IAAUQ,EAAO5B,WAC9B,gBAAhB4B,EAAO7B,KAChBkB,EAAQA,EAAME,KAAI,SAACY,EAAIX,GAAL,OAChBQ,EAAO5B,QAAQI,KAAOgB,EAAtB,2BAAmCW,GAAnC,IAAuC9B,MAAO2B,EAAO5B,QAAQC,QAAU8B,KAGhD,cAAhBH,EAAO7B,KAChBkB,EAAQA,EAAME,KAAI,SAACY,EAAIX,GAAL,OAChBQ,EAAO5B,QAAQI,KAAOgB,EAAtB,2BACSW,GADT,IACa7B,OAAQ0B,EAAO5B,QAAQE,SAChC6B,KAIDd,G,OCXMe,EAJKC,YAAgB,CAClC1C,KAAMoC,I,iBCEOO,EAFDC,YAAYH,EAAaI,YAAgBC,MCEvDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.51359743.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../actions\";\r\n\r\nfunction GetTodo() {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <form\r\n      className=\"input-wrapper\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch(addTodo(todo));\r\n        setTodo(\"\");\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        id=\"todo-wrapper\"\r\n        placeholder=\"Add todo here\"\r\n        value={todo}\r\n        onChange={(e) => {\r\n          setTodo(e.target.value);\r\n        }}\r\n        required\r\n      />\r\n      <button id=\"btn-submit\" type=\"submit\">\r\n        <img src=\"/images/plus.svg\" alt=\"\" width=\"20px\" height=\"20px\" />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default GetTodo;\r\n","const addTodo = (todo) => {\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    payload: { title: todo, isEdit: false },\r\n  };\r\n};\r\n\r\nconst removeTodo = (id) => {\r\n  return {\r\n    type: \"REMOVE_TODO\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nconst updateTodo = (id, title) => {\r\n  return {\r\n    type: \"UPDATE_TODO\",\r\n    payload: { id: id, title: title },\r\n  };\r\n};\r\n\r\nconst editTodo = (id, isEdit) => {\r\n  return {\r\n    type: \"EDIT_TODO\",\r\n    payload: { id: id, isEdit: isEdit },\r\n  };\r\n};\r\n\r\nexport { addTodo, removeTodo, updateTodo, editTodo };\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateTodo, removeTodo, editTodo } from \"../actions\";\r\n\r\nfunction DisplayTodo() {\r\n  const todos = useSelector((state) => state.todo);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      {!todos.length ? (\r\n        <div className=\"no-items\">Added todos will be listed here</div>\r\n      ) : (\r\n        todos.map((todo, index) => (\r\n          <div className=\"todo-wrapper\" key={index}>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              value={todo.title}\r\n              onChange={(e) => dispatch(updateTodo(index, e.target.value))}\r\n              disabled={todo.isEdit ? \"\" : \"disabled\"}\r\n            />\r\n            <div className=\"btn-modify\">\r\n              <button\r\n                id=\"btn-edit-todo\"\r\n                value={!todo.isEdit ? \"Edit\" : \"Done\"}\r\n                onClick={(e) => {\r\n                  console.log(e.target.value);\r\n                  let flag = e.target.value === \"Edit\" ? true : false;\r\n                  dispatch(editTodo(index, flag));\r\n                }}\r\n              >\r\n                {!todo.isEdit ? \"Edit\" : \"Done\"}\r\n              </button>\r\n              <button\r\n                id=\"btn-delete-todo\"\r\n                onClick={() => dispatch(removeTodo(index))}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayTodo;\r\n","import \"./App.css\";\nimport GetTodo from \"./components/GetTodo\";\nimport DisplayTodo from \"./components/DisplayTodo\";\n\nfunction App() {\n  return (\n    <div className=\"App-container\">\n      <header>To-Do App</header>\n      <main>\n        <GetTodo />\n        <DisplayTodo />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const todoReducer = (state = [], action) => {\r\n  if (action.type === \"ADD_TODO\") {\r\n    return [...state, action.payload];\r\n  } else if (action.type === \"REMOVE_TODO\") {\r\n    return state.filter((_item, index) => index !== action.payload);\r\n  } else if (action.type === \"UPDATE_TODO\") {\r\n    state = state.map((el, index) =>\r\n      action.payload.id === index ? { ...el, title: action.payload.title } : el\r\n    );\r\n    return state;\r\n  } else if (action.type === \"EDIT_TODO\") {\r\n    state = state.map((el, index) =>\r\n      action.payload.id === index\r\n        ? { ...el, isEdit: action.payload.isEdit }\r\n        : el\r\n    );\r\n    return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default todoReducer;\r\n","import todoReducer from \"./TodoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todo: todoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import rootReducer from \"./reducers\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}